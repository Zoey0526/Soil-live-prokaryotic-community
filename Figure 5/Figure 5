##Figure 5A copies
library(vegan)
library(ggplot2)
library(ggpubr)
library(ggsci)
setwd("D:/")
species<-read.csv("copies_lg.csv",header=T,row.names = 1)
species$treat<-as.factor(species$treat)
species$ID<-as.factor(species$ID)
species$treat <- factor(species$treat,levels = c("C","T","D","S","P","R"))
shapiro <- tapply(species$copies, species$treat, shapiro.test)
shapiro
bartlett.test(copies ~ treat, data=species)
library(rstatix)
res.aov<-anova_test(data = species, dv = copies,   wid= ID, within =  treat)
get_anova_table(res.aov)
scaleFUN<-  function(x) sprintf ("%.1f",x)
#colnames(species)<-c("Row.names","species","type")
species$group<-c(1:8,1:8,1:8,1:8,1:8,1:8)

my_comparisons <- list(c("T", "D"),  c("T", "P"),  c("D", "S"),
                        c("S", "P"))

p4 = ggplot(species,aes(fill = treat,x=factor(treat,level=c("C","T","D","S","P","R")), y=copies))+###abundance： y=species
  stat_boxplot(geom="errorbar",width=0.15)+
  geom_boxplot(alpha=0.7,aes(fill=treat))+
  geom_line(aes(group=group) ,colour="#9C9C9C",lwd=0.2)+
  geom_point(size = 0.5)+
  scale_y_continuous(name="Prokaryotic Copies(lg)",labels=scaleFUN)+
  scale_x_discrete(name="Nucleic acid extraction method")+
  scale_fill_manual(values=c("gray","#80B1D3","#FB8072" ,"#BEBADA","#FFFFB3","#8DD3C7"))+
  theme_bw()+
  theme(legend.position='none')+
  theme(panel.background = element_rect(fill = "white", colour = "black"),
        panel.grid = element_blank(),
        panel.border = element_blank(),
        text = element_text(colour="black",size=14),
        axis.title = element_text(colour="black",face="bold"),
        axis.text=element_text(colour="black",size=14),
        axis.title.x = element_blank(),
        axis.title.y = element_text(colour="black", size = 14))+
  stat_compare_means(comparisons=my_comparisons,  label ="p.signif",method = "t.test")
p4
ggsave('Copies.pdf', p4, width = 5, height = 4)

##Figure 5B relative abundance
library(reshape2)
library(ggplot2)
setwd('D:/')
phylum_top15 <- read.csv('relative_abundance_genus.csv', row.names = 1, stringsAsFactors = FALSE, check.names = FALSE)
phylum_top15$Taxonomy <- factor(rownames(phylum_top15), levels = rev(rownames(phylum_top15)))
phylum_top15 <- melt(phylum_top15, id = 'Taxonomy')
group <- read.csv('relative_abundance_site.csv', row.names = 1, stringsAsFactors = FALSE, check.names = FALSE)
names(group)[1] <- 'variable'
phylum_top15 <- merge(phylum_top15, group, by = 'variable')
x = paste0('site',1:7)
phylum_top15$group = factor(phylum_top15$group,levels = x)
#write.csv(phylum_top15, file = " phylum_top15.csv")
#phylum_top15 <- read.csv(' phylum_top15.csv', row.names = 1, stringsAsFactors = FALSE, check.names = FALSE)
p <- ggplot(phylum_top15, aes(variable, 100 * value, fill = Taxonomy)) +
  geom_col(position = 'stack', width = 0.6) +
  facet_wrap(~group, scales = 'free_x', nrow = 2)+  # Arrange in 2 rows for vertical layout +
  scale_fill_manual(values =  rev(c(   '#CCEBC5','#80B1D3', '#FDB462', '#B3DE69', '#FCCDE5','#8DD3C7', '#FFFFB3', '#BEBADA', '#FB8072' ))) +
  theme_bw() +theme(panel.grid.major =element_blank(), panel.grid.minor = element_blank(),panel.background = element_blank(),axis.line = element_line(colour = "black"))+
  theme(strip.background = element_rect( size=0.5))+
  theme(strip.text.x = element_text(size = 10, colour = "black")) + 
  theme(axis.text = element_blank())+
  #theme(axis.text.x = element_text(color="black",size = 10,face = "plain"))+
  theme(axis.text.y = element_text(color="black",size = 10,face = "plain"))+
  xlab("") + theme(axis.title.x = element_text(size = 8, face = "plain"))+
  ylab("Relative abundance(%)") + theme(axis.title.y = element_text(size = 15, face = "plain"))+
  theme(legend.text=element_text(size=12, face = "plain"))+
  theme(legend.position="right")+
  guides(fill=guide_legend(title=NULL))+
  theme(panel.grid = element_blank(), panel.background = element_rect(color = 'black', fill = 'transparent'), strip.text = element_text(size = 8))+ 
  theme(panel.border = element_rect(color="black", size=0.1))+
  theme(axis.ticks.x=element_line(color="black",size=0.3,lineend = 1))+
  theme(axis.ticks.y=element_line(color="black",size=0.3,lineend = 1))
#guides(fill=FALSE)
p
ggsave('relative abundance.pdf', p, width = 8, height = 5)

##Figure 5C visualized by STAMP

##Figure 5 D Similarity
setwd("D:/")
spe <- read.csv('otu_genus.csv',  row.names = 1, check.names = FALSE)
spe <- data.frame(t(spe))
comm_sim <- 1 - as.matrix(vegan::vegdist(spe, method = 'bray'))
diag(comm_sim) <- 0 
comm_sim[upper.tri(comm_sim)] <- 0  
comm_sim <- reshape2::melt(comm_sim)
comm_sim <- subset(comm_sim, value != 0)
write.csv(comm_sim, 'similarity.csv',  row.names = FALSE, quote = FALSE)
setwd("D:/")
species<-read.csv("BC_similarity.csv",header=T)
species$type<-as.factor(species$type)
species$ID<-as.factor(species$ID)
shapiro <- tapply(species$value, species$type, shapiro.test)
shapiro
bartlett.test(value ~ type, data=species)
library(rstatix)
res.aov<-anova_test(data = species, dv = value,   wid= ID, within =  type)
get_anova_table(res.aov)
scaleFUN<-  function(x) sprintf ("%.1f",x)
#colnames(species)<-c("Row.names","species","type")
species$group<-c(1:6,1:6,1:6,1:6,1:6,1:6)
my_comparisons <- list(c("T", "D"), c("T", "S"),c("T", "P"), c("T", "R"),c("S", "D")
                       ,c("S", "P"),c("S", "R"),c("P", "R"),c("T", "M"),c("P", "D"))
p4 = ggplot(species,aes(fill = type,x=factor(type,level=c("S/T","D/T","P/T","R/T","M/T","P/M")), y=value))+###abundance： y=species
  stat_boxplot(geom="errorbar",width=0.15)+
  geom_boxplot(alpha=0.7,aes(fill=type))+
  #geom_line(aes(group=group) ,colour="#9C9C9C",lwd=0.2)+
  geom_point(size = 0.5)+
  scale_y_continuous(name="Bray-Curtis Similarity",labels=scaleFUN)+
  scale_x_discrete(name="Treat")+
  theme_bw()+
  theme(legend.position='none')+
  theme(panel.background = element_rect(fill = "white", colour = "black"), 
        panel.grid = element_blank(),
        panel.border = element_blank(),
        text = element_text(colour="black",size=12),
        axis.title = element_text(colour="black",face="bold"),
        axis.text=element_text(colour="black",size=12),
        axis.title.x = element_blank(),
        axis.title.y = element_text(colour="black", size = 12))+
  xlab("Treat")+ylab("Bray-Curtis similarity ")+coord_cartesian(ylim = c(0.2,1))
  #stat_compare_means(comparisons=my_comparisons,label ="p.signif",step_increase = 0.1,map_signif_level = T,test = wilcox.test,paired = TRUE) # Add pairwise 
  #stat_compare_means(label.y = 0.58,label.x = 3,size=5) # Add global p-value
p4<-p4+scale_fill_brewer(palette = "Set2") 
p4
ggsave('Total.pdf', p4, width = 6, height = 5)
