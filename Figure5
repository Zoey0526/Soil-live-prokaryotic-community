##Figure5
##relative abundance
library(reshape2)
library(ggplot2)
setwd('D:/')
phylum_top15 <- read.csv('3w5_genus_deleteR.csv', row.names = 1, stringsAsFactors = FALSE, check.names = FALSE)
phylum_top15$Taxonomy <- factor(rownames(phylum_top15), levels = rev(rownames(phylum_top15)))
phylum_top15 <- melt(phylum_top15, id = 'Taxonomy')
group <- read.csv('XXX.csv', row.names = 1, stringsAsFactors = FALSE, check.names = FALSE)
names(group)[1] <- 'variable'
phylum_top15 <- merge(phylum_top15, group, by = 'variable')
x = paste0('site',1:7)
phylum_top15$group = factor(phylum_top15$group,levels = x)
#write.csv(phylum_top15, file = " phylum_top15.csv")
#phylum_top15 <- read.csv(' phylum_top15.csv', row.names = 1, stringsAsFactors = FALSE, check.names = FALSE)
p <- ggplot(phylum_top15, aes(variable, 100 * value, fill = Taxonomy)) +
  geom_col(position = 'stack', width = 0.6) +
  facet_wrap(~group, scales = 'free_x', nrow = 2)+  # Arrange in 2 rows for vertical layout +
  scale_fill_manual(values =  rev(c(   '#CCEBC5','#80B1D3', '#FDB462', '#B3DE69', '#FCCDE5','#8DD3C7', '#FFFFB3', '#BEBADA', '#FB8072' ))) +
  theme_bw() +theme(panel.grid.major =element_blank(), panel.grid.minor = element_blank(),panel.background = element_blank(),axis.line = element_line(colour = "black"))+
  theme(strip.background = element_rect( size=0.5))+
  theme(strip.text.x = element_text(size = 10, colour = "black")) + 
  theme(axis.text = element_blank())+
  #theme(axis.text.x = element_text(color="black",size = 10,face = "plain"))+
  theme(axis.text.y = element_text(color="black",size = 10,face = "plain"))+
  xlab("") + theme(axis.title.x = element_text(size = 8, face = "plain"))+
  ylab("Relative abundance(%)") + theme(axis.title.y = element_text(size = 15, face = "plain"))+
  theme(legend.text=element_text(size=12, face = "plain"))+
  theme(legend.position="right")+
  guides(fill=guide_legend(title=NULL))+
  theme(panel.grid = element_blank(), panel.background = element_rect(color = 'black', fill = 'transparent'), strip.text = element_text(size = 8))+ 
  theme(panel.border = element_rect(color="black", size=0.1))+
  theme(axis.ticks.x=element_line(color="black",size=0.3,lineend = 1))+
  theme(axis.ticks.y=element_line(color="black",size=0.3,lineend = 1))
#guides(fill=FALSE)
p
ggsave('XXXpdf', p, width = 8, height = 5)

##PCoA
setwd("D:")
library(vegan)
library(ggplot2)
otu <- read.csv(file="otu_5_NM.csv",header=TRUE, row.names=1)
head(otu)
otu <- t(otu)
head(otu)
otu.distance <- vegdist(otu, method = 'bray')
otu.distance
pcoa <- cmdscale (otu.distance,eig=TRUE)
pc12 <- pcoa$points[,1:2]
pc <- round(pcoa$eig/sum(pcoa$eig)*100,digits=2)
pc12 <- as.data.frame(pc12)
pc12$samples <- row.names(pc12)
head(pc12)
p <- ggplot(pc12,aes(x=V1, y=V2))+
  geom_point(size=3)+theme_bw()
p
group <- read.csv("PCoA_group_NM.csv", header=TRUE)
df <- merge(pc12,group,by="samples")
#write.csv(df,file = "df.csv",row.names = TRUE)
set.seed(2)
adonis_result<-adonis2(otu ~ group, data = group,permutations = 999,method="bray")
adonis_result
color <- c('#80B1D3','#FB8072','#BEBADA','#FFCC00','#8DD3C7')
color <- c('#FB8072','#FFCC00','#8DD3C7','#BEBADA','#80B1D3')
color=c('#FB8072','#80B1D3')#TD
color=c('#FFCC00','#80B1D3')#TP
color=c('#BEBADA','#80B1D3')#TS
color=c('#8DD3C7','#80B1D3')#TR
color=c('#FFC0CB','#80B1D3')#TM
color=c('#FFC0CB','#FFCC00')#MP
dune_adonis <- paste0("adonis R2: ",round(adonis_result$R2,4), "; P-value: ", adonis_result$`Pr(>F)`)
p<-ggplot(data=df,aes(x=V1,y=V2,
                      color=group))+
  theme_bw()+
  geom_point(size=4)+
  theme(panel.grid = element_blank())+
  geom_vline(xintercept = 0,lty="dashed")+
  geom_hline(yintercept = 0,lty="dashed")+
  geom_text(aes(label=samples, y=V2+0.03,x=V1+0.03, vjust=0),size=0)+
  #guides(color=guide_legend(title=NULL))+
  labs(x=paste0("PCoA1 ","(",pc[1],"%)"),
       y=paste0("PCoA2 ","(",pc[2],"%)"),
       title=dune_adonis)+
  scale_color_manual(values = color) +
  scale_fill_manual(values = color)+
  theme(axis.title.x=element_text(size=12),
        axis.title.y=element_text(size=12,angle=90),
        axis.text.y=element_text(size=12),
        axis.text.x=element_text(size=12),
        panel.grid=element_blank()) + 
  stat_ellipse(data=df,geom = "polygon",level=0.95,linetype = 2, linewidth=0.2,aes(fill=group),alpha=0.2,show.legend = FALSE)
p
ggsave(p,filename = "PCoA_MP.pdf",width = 5, height = 5)
ggsave(p,filename = "PCoA_5个otu_NM.pdf",width = 6, height = 5)

##Similarity
setwd("D:/")
spe <- read.csv('otu.csv',  row.names = 1, check.names = FALSE)
spe <- data.frame(t(spe))
comm_sim <- 1 - as.matrix(vegan::vegdist(spe, method = 'bray'))
diag(comm_sim) <- 0 
comm_sim[upper.tri(comm_sim)] <- 0  
comm_sim <- reshape2::melt(comm_sim)
comm_sim <- subset(comm_sim, value != 0)
write.csv(comm_sim, 'similarity.csv',  row.names = FALSE, quote = FALSE)
setwd("D:/")
species<-read.csv("BC similarity.csv",header=T)
species$type<-as.factor(species$type)
species$ID<-as.factor(species$ID)
shapiro <- tapply(species$value, species$type, shapiro.test)
shapiro
bartlett.test(value ~ type, data=species)
library(rstatix)
res.aov<-anova_test(data = species, dv = value,   wid= ID, within =  type)
get_anova_table(res.aov)
scaleFUN<-  function(x) sprintf ("%.1f",x)
#colnames(species)<-c("Row.names","species","type")
species$group<-c(1:6,1:6,1:6,1:6,1:6,1:6)
my_comparisons <- list(c("T", "D"), c("T", "S"),c("T", "P"), c("T", "R"),c("S", "D")
                       ,c("S", "P"),c("S", "R"),c("P", "R"),c("T", "M"),c("P", "D"))
p4 = ggplot(species,aes(fill = type,x=factor(type,level=c("S/T","D/T","P/T","R/T","M/T","P/M")), y=value))+###abundance： y=species
  stat_boxplot(geom="errorbar",width=0.15)+
  geom_boxplot(alpha=0.7,aes(fill=type))+
  #geom_line(aes(group=group) ,colour="#9C9C9C",lwd=0.2)+
  geom_point(size = 0.5)+
  scale_y_continuous(name="Bray-Curtis Similarity",labels=scaleFUN)+
  scale_x_discrete(name="Treat")+
  theme_bw()+
  theme(legend.position='none')+
  theme(panel.background = element_rect(fill = "white", colour = "black"), 
        panel.grid = element_blank(),
        panel.border = element_blank(),
        text = element_text(colour="black",size=12),
        axis.title = element_text(colour="black",face="bold"),
        axis.text=element_text(colour="black",size=12),
        axis.title.x = element_blank(),
        axis.title.y = element_text(colour="black", size = 12))+
  xlab("Treat")+ylab("Bray-Curtis similarity ")+coord_cartesian(ylim = c(0.2,1))
  #stat_compare_means(comparisons=my_comparisons,label ="p.signif",step_increase = 0.1,map_signif_level = T,test = wilcox.test,paired = TRUE) # Add pairwise 
  #stat_compare_means(label.y = 0.58,label.x = 3,size=5) # Add global p-value
p4<-p4+scale_fill_brewer(palette = "Set2") 
p4
ggsave('Total.pdf', p4, width = 6, height = 5)
